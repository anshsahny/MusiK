{"version":3,"sources":["spotify.js","login.js","sidebarOption.js","datalayer.js","sidebar.js","header.js","songRow.js","body.js","footer.js","player.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","SidebarOption","title","Icon","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusic","items","map","playlist","name","Header","user","placeholder","type","Avatar","images","url","display_name","SongRow","track","album","artists","artist","Body","spotify","discover_weekly","description","PlayCircleFilled","Favorite","fontSize","MoreHoriz","tracks","item","Footer","Shuffle","SkipPrevious","PlayCircleOutline","SkipNext","Repeat","Grid","container","spacing","PlaylistPlay","VolumeDown","xs","Slider","Player","SpotifyWebApi","App","token","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","console","log","setAccessToken","getMe","then","getUserPlaylists","getPlaylist","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","playing","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f346e060.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\nconst redirectUri = \"https://musik-10ec5.web.app/\";\nconst clientId = \"6c6b4944b9ba4ce1bf4ed4122d51fd82\";\n\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n];\n\nexport const getTokenFromUrl = () => {\n  return window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce((initial, item) => {\n      let parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n      return initial;\n    }, {});\n};\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;","import React from \"react\";\nimport \"./login.css\";\nimport { loginUrl } from \"./spotify\";\n\nfunction Login() {\n  return (\n    <div className=\"login\">\n      <img src=\"https://music-b26f.kxcdn.com/wp-content/uploads/2017/06/635963274692858859903160895_spotify-logo-horizontal-black.jpg\" alt=\"Spotify logo\"/>\n      <a href={loginUrl}>LOGIN WITH SPOTIFY</a>\n    </div>\n  );\n}\n\nexport default Login;","import React from \"react\";\nimport \"./sidebarOption.css\";\n\nfunction SidebarOption({ title, Icon }) {\n  return (\n    <div className=\"sidebarOption\">\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\n    </div>\n  );\n}\n\nexport default SidebarOption;","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const DataLayerContext = createContext();\n\nexport const DataLayer = ({ initialState, reducer, children }) => (\n  <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </DataLayerContext.Provider>\n);\n\nexport const useDataLayerValue = () => useContext(DataLayerContext);","import React from \"react\";\nimport \"./sidebar.css\";\nimport SidebarOption from \"./sidebarOption\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { LibraryMusic } from \"@material-ui/icons\";\nimport { useDataLayerValue } from \"./datalayer\";\n\nfunction Sidebar() {\n  const [{ playlists }, dispatch] = useDataLayerValue();\n\n  return (\n    <div className=\"sidebar\">\n      <img\n        className=\"sidebar__logo\"\n        src=\"https://music-b26f.kxcdn.com/wp-content/uploads/2017/06/635963274692858859903160895_spotify-logo-horizontal-black.jpg\"\n        alt=\"Spotify logo\"\n      />\n\n      <SidebarOption title=\"Home\" Icon={HomeIcon} />\n      <SidebarOption title=\"Search\" Icon={SearchIcon} />\n      <SidebarOption title=\"Your Library\" Icon={LibraryMusic} />\n      <br />\n      <strong className=\"sidebar__title\">PLAYLISTS</strong>\n      <hr />\n      {playlists?.items?.map((playlist) => (\n        <SidebarOption title={playlist.name} />\n      ))}\n    </div>\n  );\n}\n\nexport default Sidebar;","import React from \"react\";\nimport { Search } from \"@material-ui/icons\";\nimport \"./header.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport { useDataLayerValue } from \"./datalayer\";\n\nfunction Header() {\n  const [{ user }, dispatch] = useDataLayerValue();\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <Search />\n        <input placeholder=\"Search for Artists, Songs, or Albums\" type=\"text\" />\n      </div>\n      <div className=\"header__right\">\n        <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\n        <h4>{user?.display_name}</h4>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport \"./songRow.css\";\n\nfunction SongRow({ track }) {\n  return (\n    <div className=\"songRow\">\n      <img src={track.album.images[0].url} alt=\"\" className=\"songRow__album\" />\n      <div className=\"songRow__info\">\n        <h1>{track.name}</h1>\n        <p>\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\n          {track.album.name}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default SongRow;","import React from \"react\";\nimport \"./body.css\";\nimport Header from \"./header\";\nimport { useDataLayerValue } from \"./datalayer\";\nimport { PlayCircleFilled, Favorite, MoreHoriz } from \"@material-ui/icons\";\nimport SongRow from \"./songRow\";\n\nfunction Body({ spotify }) {\n  const [{ discover_weekly }, dispatch] = useDataLayerValue();\n\n  return (\n    <div className=\"body\">\n      <Header spotify={spotify} />\n      <div className=\"body__info\">\n        <img src={discover_weekly?.images[0]?.url} alt=\"\" />\n        <div className=\"body__infoText\">\n          <strong>PLAYLIST</strong>\n          <h2>Discover Weekly</h2>\n          <p>{discover_weekly?.description}</p>\n        </div>\n      </div>\n      <div className=\"body__songs\">\n        <div className=\"body__icons\">\n          <PlayCircleFilled className=\"body__shuffle\" />\n          <Favorite fontSize=\"large\" />\n          <MoreHoriz />\n        </div>\n        {discover_weekly?.tracks.items.map((item) => (\n          <SongRow track={item.track} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Body;","import React from \"react\";\nimport \"./footer.css\";\nimport {\n  PlayCircleOutline,\n  SkipPrevious,\n  SkipNext,\n  PlaylistPlay,\n  Shuffle,\n  Repeat,\n  VolumeDown,\n} from \"@material-ui/icons\";\nimport { Grid, Slider } from \"@material-ui/core\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <div className=\"footer__left\">\n        <img\n          src=\"https://i.pinimg.com/originals/8d/c7/52/8dc752834195102e4cb630a53221255e.jpg\"\n          alt=\"\"\n          className=\"footer__albumLogo\"\n        />\n        <div className=\"footer__songInfo\">\n          <h4>Test Song</h4>\n          <p>Ansh Sahny</p>\n        </div>\n      </div>\n      <div className=\"footer__center\">\n        <Shuffle className=\"footer__green\" />\n        <SkipPrevious className=\"footer__icon\" />\n        <PlayCircleOutline fontSize=\"large\" className=\"footer__icon\" />\n        <SkipNext className=\"footer__icon\" />\n        <Repeat className=\"footer__green\" />\n      </div>\n      <div className=\"footer__right\">\n        <Grid container spacing={2}>\n          <Grid item>\n            <PlaylistPlay />\n          </Grid>\n          <Grid item>\n            <VolumeDown />\n          </Grid>\n          <Grid item xs>\n            <Slider />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;","import React from \"react\";\nimport \"./player.css\";\nimport Sidebar from \"./sidebar\";\nimport Body from \"./body\";\nimport Footer from \"./footer\";\n\nfunction Player({ spotify }) {\n  return (\n    <div className=\"player\">\n      <div className=\"player__body\">\n        <Sidebar />\n        <Body spotify={spotify} />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Player;","import React, { useEffect, useState } from \"react\";\nimport Login from \"./login\";\nimport \"./App.css\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from \"./player\";\nimport { useDataLayerValue } from \"./datalayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n      console.log(\"[token]\", token);\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists,\n        });\n      });\n      spotify.getPlaylist(\"37i9dQZF1E34Ucml4HHx1w\").then((playlist) => {\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: playlist,\n        });\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {token ? <Player spotify={spotify} /> : <Login />}\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\n    user: null,\n    token: null,\n    playlists: [],\n    playing: false,\n    item: null,\n  };\n  \n  const reducer = (state, action) => {\n    console.log(action);\n  \n    switch (action.type) {\n      case \"SET_USER\":\n        return {\n          ...state,\n          user: action.user,\n        };\n      case \"SET_TOKEN\":\n        return {\n          ...state,\n          token: action.token,\n        };\n      case \"SET_PLAYLISTS\":\n        return {\n          ...state,\n          playlists: action.playlists,\n        };\n      case \"SET_DISCOVER_WEEKLY\":\n        return {\n          ...state,\n          discover_weekly: action.discover_weekly,\n        };\n      default:\n        return state;\n    }\n  };\n  \n  export default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { DataLayer } from './datalayer';\nimport reducer, { initialState } from \"./reducer\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();\n"],"sourceRoot":""}